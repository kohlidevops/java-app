		@Library('my-shared-lib') _
		pipeline{
        	agent any
        		parameters{
                		choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        			}
        	stages{
                	stage('Git Checkout'){
                                       when { expression {  params.action == 'create' } }
                        steps{
                        	gitCheckout(
                                	branch: "main",
                            		url: "https://github.com/kohlidevops/java-app.git"
                                        )
                        	}
                	}
                stage('Unit Test with Maven'){
                                     when { expression {  params.action == 'create' } }
                                steps{
                                        script{
                                        	mvnTest()
                                        }
                                }
                        }
                stage('Integration Test with Maven'){
                                        when { expression {  params.action == 'create' } }
                                steps{
                                        script{
                                                mvnIntegrationTest()
                                        }
                                }
                        }
                stage('Static Code Analysis with SonarQube'){
                                        when { expression {  params.action == 'create' } }
                                steps{
                                        script{
                                                statiCodeAnalysis()
                                        }
                                }
                        }
                stage('Code Quality Status Check with SonarQube'){
                                        when { expression {  params.action == 'create' } }
                                steps{
                                        script{
                                        	QualityGateStatus()
                                        }
                                }
                        }
                stage('Maven Build Stage'){
                                        when { expression {  params.action == 'create' } }
                                steps{
                                        script{
                                        	mvnBuild()
                                        }
                                }
                        }
                stage('Docker Image Build'){
         				when { expression {  params.action == 'create' } }
            			steps{
               				script{
                   				dockerBuildECR()
               					}
            				}
        			}
        	stage('Docker Image Scanning'){
         				when { expression {  params.action == 'create' } }
            			steps{
               				script{
                				dockerImageScanECR()
               					}
            				}
        			}
        	stage('Docker Image Push'){
         				when { expression {  params.action == 'create' } }
            			steps{
               				script{
                   				dockerImagePushECR()
               					}
            				}
        			}
		    	}
        	}
